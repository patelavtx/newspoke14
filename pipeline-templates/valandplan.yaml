stages:
- stage: validate
  jobs:
  - job: validate
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: 'install'
      inputs:
        terraformVersion: '1.2.0'
    - task: TerraformTaskV3@3
      displayName: init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'atulavtx-sst2'
        backendAzureRmResourceGroupName: 'atulrg-opstesting'
        backendAzureRmStorageAccountName: 'atulstorspk17'
        backendAzureRmContainerName: 'ctrspk17'
        backendAzureRmKey: 'spk17.tfstate'
    - task: TerraformTaskV3@3
      displayName: 'validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
- stage: plan
  jobs:
    - deployment: validate_and_plan
      continueOnError: false
      environment: 'newspoke14'
      strategy:
       runOnce:
         deploy:
          steps:
            - checkout: self
            - task: TerraformInstaller@0
              displayName: 'install'
              inputs:
                terraformVersion: '1.2.0'
            - task: TerraformTaskV3@3
              displayName: 'init'
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: 'atulavtx-sst2'
                backendAzureRmResourceGroupName: 'atulrg-opstesting'
                backendAzureRmStorageAccountName: 'atulstorspk17'
                backendAzureRmContainerName: 'ctrspk17'
                backendAzureRmKey: 'spk17.tfstate'
            - task: DownloadSecureFile@1
              name: mySecureFile # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
              inputs:
                secureFile: spoke17.tfvars
                #retryCount: 5 # Optional
            - task: TerraformTaskV3@3
              displayName: 'plan'
              inputs:
                provider: 'azurerm'
                command: 'plan'
                #commandOptions: '-input=false -var "ctrl_password=$(TF_VAR_ctrl_password)" -var "controller_ip=$(TF_VAR_controller_ip)"'
                # Gets variables from tfvars, variables.tf identifies the password and ip settings
                #commandOptions: '-var "ctrl_password=$(ctrl_password)" -var "controller_ip=$(controller_ip)" -var-file "$(mySecureFile.secureFilePath)"'
                commandOptions: '-var "ctrl-password=$(ctrl-password)" -var "controller-ip=$(controller-ip)" -var-file "$(mySecureFile.secureFilePath)"'


                environmentServiceNameAzureRM: 'atulavtx-sst2'
